"""Update address datatype

Revision ID: 8d131a0a5b8e
Revises: 2c851f1fc347
Create Date: 2025-08-22 12:42:48.087790

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8d131a0a5b8e'
down_revision: Union[str, Sequence[str], None] = '2c851f1fc347'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('like_post_id_fkey'), 'like', type_='foreignkey')
    op.create_foreign_key(None, 'like', 'post', ['post_id'], ['id'], ondelete='CASCADE')
    op.add_column('story', sa.Column('user_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'story', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.alter_column('users', 'address',
               existing_type=sa.INTEGER(),
               type_=sa.String(),
               existing_nullable=False)
    op.create_unique_constraint(None, 'users', ['Email'])
    op.create_unique_constraint(None, 'users', ['phone'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_constraint(None, 'users', type_='unique')
    op.alter_column('users', 'address',
               existing_type=sa.String(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.drop_constraint(None, 'story', type_='foreignkey')
    op.drop_column('story', 'user_id')
    op.drop_constraint(None, 'like', type_='foreignkey')
    op.create_foreign_key(op.f('like_post_id_fkey'), 'like', 'users', ['post_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###
